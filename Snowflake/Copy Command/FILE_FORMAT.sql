CREATE SCHEMA MANAGE_DB.FILE_FORMATS;

CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS(
ORDERID VARCHAR(30),
AMOUNT INT,
PROFIT INT,
QUANTITY INT,
CATEGORY VARCHAR(30),
SUBCATEGORY VARCHAR(30)
);

--CREATE FILE FORMAT
CREATE OR REPLACE FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

DESC FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

--DEFAULT COPY STATEMENT
COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
FILE_FORMAT = MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
FILES = ('OrderDetails_error.csv')
ON_ERROR = 'SKIP_FILE_3';  -- THIS WILL FAIL AS WE HAVEN'T SKIPPED THE HEADER

--CREATE FILE FORMAT WITH DIFFERENT OPTIONS
CREATE OR REPLACE FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
SKIP_HEADER = 1,
FIELD_DELIMITER = ',';

DESC FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
FILE_FORMAT = MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
FILES = ('OrderDetails_error.csv')
ON_ERROR = 'SKIP_FILE_3'; -- THIS WILL WORK

SELECT COUNT(1) FROM OUR_FIRST_DB.PUBLIC.ORDERS;


--CREATE FILE FORMAT WITH JSON TYPE
CREATE OR REPLACE FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
TYPE = 'JSON',
TIME_FORMAT = AUTO;

DESC FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
FILE_FORMAT = MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
FILES = ('OrderDetails_error.csv')
ON_ERROR = 'SKIP_FILE_3'; -- THIS WILL FAIL AS THE FILE FORMAT IS JOSN BUT THE STAGE FILE IS CSV

ALTER FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT
SET TYPE = CSV; -- TYPE CAN'T BE CHANGED IN ALTER STATEMENT. OTHER FILE FORMAT OPTIONS ARE BASED ON TYPE

SELECT COUNT(1) FROM OUR_FIRST_DB.PUBLIC.ORDERS;


--CREATE FILE FORMAT
CREATE OR REPLACE FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

TRUNCATE OUR_FIRST_DB.PUBLIC.ORDERS;

DESC FILE FORMAT MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT;

COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
FILE_FORMAT = (FORMAT_NAME = MANAGE_DB.FILE_FORMATS.MY_FILE_FORMAT, SKIP_HEADER = 1, FIELD_DELIMITER = ',')
FILES = ('OrderDetails_error.csv')
ON_ERROR = 'SKIP_FILE_3'; -- THIS WILL WORK


SELECT COUNT(1) FROM OUR_FIRST_DB.PUBLIC.ORDERS;