CREATE OR REPLACE PROCEDURE CUSTOMERS_INSERT_PROCEDURE (CREATED_TS TIMESTAMP)
RETURNS STRING NOT NULL
LANGUAGE SQL
AS
BEGIN
    INSERT INTO TASK_DB.PUBLIC.CUSTOMERS (CREATED_TS) VALUES (:CREATED_TS);
    RETURN 'SUCCESSFULLY INSERTED';
END;

CREATE OR REPLACE PROCEDURE CUSTOMERS_INSERT_PROCEDURE_JS(CREATE_TS VARCHAR)
RETURNS STRING NOT NULL
LANGUAGE JAVASCRIPT
AS
$$
    var var_sql = 'INSERT INTO TASK_DB.PUBLIC.CUSTOMERS (CREATED_TS) VALUES (:1)';

    var stmt = snowflake.createStatement(
                {
                    sqlText: var_sql,
                    binds: [CREATE_TS]
                });

    stmt.execute();
    
    return 'INSERTED SUCCESSSFULLY';
    
$$;

CALL CUSTOMERS_INSERT_PROCEDURE_JS(CURRENT_TIMESTAMP::VARCHAR);

CREATE OR REPLACE TASK CUSTOMER_TASK_PROCEDURE
WAREHOUSE = COMPUTE_WH
SCHEDULE = '1 MINUTE'
AS
CALL CUSTOMERS_INSERT_PROCEDURE(CURRENT_TIMESTAMP);
INSERT INTO TASK_DB.PUBLIC.CUSTOMERS (CREATED_TS) VALUES (CURRENT_TIMESTAMP);

ALTER TASK CUSTOMER_TASK_PROCEDURE RESUME;

SHOW TASKS;

SELECT * FROM TASK_DB.PUBLIC.CUSTOMERS;

select *
  from table(information_schema.task_history())
  WHERE NAME ='CUSTOMER_TASK_PROCEDURE'
  order by scheduled_time;